<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.board.domain.post.PostMapper">
    <sql id="postColumns">
        id ,title , content , writer , view_cnt , notice_yn , delete_yn
        , created_date , modified_date
    </sql>
    <!--    게시글 검색-->
    <sql id="search">
        <!-- 검색 키워드가 있을 때 -->
        <if test="keyword != null and keyword != ''">
            <choose>
                <!-- 검색 유형이 있을 때 -->
                <when test="searchType != null and searchType != ''">
                    <choose>
                        <when test="'title'.equals( searchType )">
                            AND title LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'content'.equals( searchType )">
                            AND content LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                        <when test="'writer'.equals( searchType )">
                            AND writer LIKE CONCAT('%', #{keyword}, '%')
                        </when>
                    </choose>
                </when>

                <!-- 전체 검색일 때 -->
                <otherwise>
                    AND(
                    title LIKE CONCAT('%', #{keyword}, '%')
                    OR content LIKE CONCAT('%', #{keyword}, '%')
                    OR writer LIKE CONCAT('%', #{keyword}, '%')
                    )
                </otherwise>
            </choose>
        </if>
    </sql>

    <insert id="save" parameterType="com.example.board.domain.post.PostRequest" useGeneratedKeys="true"
            keyProperty="id">
        insert into tb_post
        (<include refid="postColumns"/>)
        values (#{id}, #{title}, #{content}, #{writer}, 0, #{noticeYn}, 0, NOW(), null)
    </insert>

    <select id="findById" parameterType="long" resultType="com.example.board.domain.post.PostResponse">
        select
        <include refid="postColumns"/>
        from tb_post where id = #{value}
    </select>

    <update id="update" parameterType="com.example.board.domain.post.PostRequest">
        update tb_post
        set modified_date = NOW(),
            title         = #{title},
            content       = #{content},
            writer        = #{writer},
            notice_yn     = #{noticeYn}
        where id = #{id}
    </update>

    <delete id="deleteById" parameterType="long">
        update tb_post
        set delete_yn = 1
        where id = #{id}
    </delete>

    <!--게시글 리스트 조회, 페이지네이션 이후 수정-->
    <select id="findAll" parameterType="com.example.board.common.dto.SearchDto"
            resultType="com.example.board.domain.post.PostResponse">
        select
        <include refid="postColumns"/>
        from tb_post
        where delete_yn =0
        <include refid="search"/>
        order by id desc
        LIMIT #{pagination.limitStart}, #{recordSize}
    </select>

    <select id="count" parameterType="com.example.board.common.dto.SearchDto" resultType="int">
        select count(*)
        from tb_post
        where delete_yn = 0
        <include refid="search"/>
    </select>


</mapper>